# Author: Aymeric Beaumet <hi@aymericbeaumet.com> (https://aymericbeaumet.com)
# Github: @aymericbeaumet/dotfiles

# C-Q bindings

unbind C-b
set -g prefix C-q

bind C-q send-prefix

bind   c new-window -c "#{pane_current_path}"
bind   t new-window -c "#{pane_current_path}"
bind C-t new-window -c "#{pane_current_path}"

bind   n next-window
bind C-n next-window
bind   p previous-window
bind C-p previous-window

bind   v split-window -h -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind   s split-window -v -c "#{pane_current_path}"
bind C-s split-window -v -c "#{pane_current_path}"

bind      h run-shell "if [ $(tmux display-message -p '#{pane_at_left}')   -ne 1 ]; then tmux select-pane -L; fi"
bind BSpace run-shell "if [ $(tmux display-message -p '#{pane_at_left}')   -ne 1 ]; then tmux select-pane -L; fi"
bind      j run-shell "if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ]; then tmux select-pane -D; fi"
bind    C-j run-shell "if [ $(tmux display-message -p '#{pane_at_bottom}') -ne 1 ]; then tmux select-pane -D; fi"
bind      k run-shell "if [ $(tmux display-message -p '#{pane_at_top}')    -ne 1 ]; then tmux select-pane -U; fi"
bind    C-k run-shell "if [ $(tmux display-message -p '#{pane_at_top}')    -ne 1 ]; then tmux select-pane -U; fi"
bind      l run-shell "if [ $(tmux display-message -p '#{pane_at_right}')  -ne 1 ]; then tmux select-pane -R; fi"
bind    C-l run-shell "if [ $(tmux display-message -p '#{pane_at_right}')  -ne 1 ]; then tmux select-pane -R; fi"

bind H swap-pane -s '{left-of}'
bind J swap-pane -s '{down-of}'
bind K swap-pane -s '{up-of}'
bind L swap-pane -s '{right-of}'

bind = select-layout even-horizontal
bind q kill-pane
bind r source "$HOME/.tmux.conf"
bind u "copy-mode; send -X halfpage-up"
bind / command-prompt -p "(search down)" "copy-mode; send -X search-forward  \"%%%\""
bind ? command-prompt -p "(search up)"   "copy-mode; send -X search-backward \"%%%\""

# C-G bindings (git commands)
bind-key -Troot C-g switch-client -T ctrl-g-prefix
bind -T ctrl-g-prefix b new-window -a -c '#{pane_current_path}'                         -n '[git browse]' "git browse"
bind -T ctrl-g-prefix c new-window -a -c '#{pane_current_path}'                         -n '[git commit]' "git add -A; git commit; git reset"
bind -T ctrl-g-prefix d new-window -a -c '#{pane_current_path}' -e GIT_PAGER='less -+F' -n '[git diff]'   "git reset; git diff"
bind -T ctrl-g-prefix l new-window -a -c '#{pane_current_path}' -e GIT_PAGER='less -+F' -n '[git log]'    "git log"
bind -T ctrl-g-prefix p new-window -a -c '#{pane_current_path}' -e GIT_PAGER='less -+F' -n '[git push]'   "git push -u"
bind -T ctrl-g-prefix s new-window -a -c '#{pane_current_path}' -e GIT_PAGER='less -+F' -n '[git show]'   "git show"

# copy mode bindings
set -g mode-keys vi
set -g escape-time 0
bind -T copy-mode-vi enter send -X copy-pipe-and-cancel "squeeze -1 --url --open"
bind -T copy-mode-vi escape send -X cancel
bind -T copy-mode-vi d send -X halfpage-down
bind -T copy-mode-vi u send -X halfpage-up
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe "pbcopy"

# Status bindings
set -g status-keys emacs

# Agressively resize
setw -g aggressive-resize on

# Increase history limit
set -g history-limit 1000000

# Quiet
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -gw monitor-activity off
set -g bell-action none

# Enable mouse support
set -g mouse on

# enable 256 colors
set -g default-terminal "screen-256color"
set -sa terminal-overrides ',xterm-256color:RGB'

# windows
set -g allow-rename off
set -g status-interval 1
set -g automatic-rename on
set -g automatic-rename-format "#{?window_active,#{underscore}#{s|/Users/aymericbeaumet|~|:pane_current_path},#{s|/Users/aymericbeaumet|~|:pane_current_path}}"

# panes
set -g pane-border-style fg=white

# status bar
set -g status on
set -g base-index 1
setw -g pane-base-index 1
set -g status 2
set -g status-position top
set -g status-style fg=white,bg=color232
set -g status-left "  "
set -g status-left-length 32 # maximum
set -g status-right "battery=#(pmset -g batt | grep -Eo '\\d+%%') time=%H:%M  "
set -g status-right-length 32 # maximum
set -g status-format[1] '' # reset line 2

# copy mode theme
set -g mode-style fg=colour255,bg=colour178
set-hook -g pane-mode-changed 'if -F "#{m/r:(copy|view)-mode,#{pane_mode}}" "set status-style fg=colour255,bg=colour178" "set -u status-style"'
